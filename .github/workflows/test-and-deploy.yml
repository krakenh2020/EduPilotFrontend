name: Build, Test, Deploy
#on: [push, workflow_dispatch]
on:
 push:
   branches:
     - master
 workflow_dispatch:
   branches:
     - master


jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      #- name: Install Chrome
      #  run: |
      #    sudo DEBIAN_FRONTEND=noninteractive apt-get install -y chromium-browser
      #    npm i -D puppeteer karma-chrome-launcher
      
      - name: Configure GIT credential helper
        env:
          TUG_GITLAB_ACCESSTOKEN: ${{ secrets.TUG_GITLAB_ACCESSTOKEN }}
        run: |
          mkdir -p ~/.config/git/
          touch ~/.config/git/credentials
          chmod 600 ~/.config/git/credentials
          echo "$TUG_GITLAB_ACCESSTOKEN" >> ~/.config/git/credentials
          git config --global credential.helper 'store --file ~/.config/git/credentials'
      
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false

      - name: Checkout submodules 🌐
        run: git submodule update --init

      - name: Install  🔧
        run: |
          yarn install
          yarn rollup -c --environment BUILD:kraken

      - name: Lint 🚧
        run: |
          yarn lint

      - name: Test 🚨
        run: |
          yarn test

      - name: test output
        run: |
          ls dist/coverage/*

      - name: SonarQube Scan 🚑
        uses: kitabisa/sonarqube-action@master
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}
          projectKey: EduPilotPrototype1
          projectVersion: 2022.3.1

      - name: Test Full 🔥
        run: |
          yarn test-full

      - name: Cleanup GIT credentials
        if: ${{ always() }}
        run: |
          rm ~/.config/git/credentials
          


  build-and-deploy-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Configure GIT credential helper
        env:
          TUG_GITLAB_ACCESSTOKEN: ${{ secrets.TUG_GITLAB_ACCESSTOKEN }}
        run: |
          mkdir -p ~/.config/git/
          touch ~/.config/git/credentials
          chmod 600 ~/.config/git/credentials
          echo "$TUG_GITLAB_ACCESSTOKEN" >> ~/.config/git/credentials
          git config --global credential.helper 'store --file ~/.config/git/credentials'

      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false

      - name: Checkout submodules 🌐
        run: git submodule update --init

      - name: Fix app-shell URLs 👷
        run: |
          APPSHELL="./vendor/toolkit/packages/app-shell/src/app-shell.js"
          sed -i -e 's:www.tugraz.at/en/about-this-page/legal-notice/:krakenh2020.eu/legal-notice:g' $APPSHELL
          sed -i -e 's:www.tugraz.at/ueber-diese-seite/impressum/:krakenh2020.eu/legal-notice:g' $APPSHELL
          sed -i -e 's:it-support@tugraz.at:smore@tugraz.at:g' $APPSHELL

      - name: Fix git config 👷
        run: |
          echo "https://github.com/$GITHUB_REPOSITORY.git"
          git remote rm origin
          git remote add origin https://github.com/$GITHUB_REPOSITORY.git

      - name: Install and Build 🔧
        run: |
          yarn install
          yarn rollup -c --environment BUILD:kraken-local

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Docker Build & Push Docker image
        run: |
          export DOCKER_TAG=docker.pkg.github.com/krakenh2020/edupilotfrontend/kraken-edu_connector:latest
          echo "Building branch: $GITHUB_REF"
          echo "      at commit: ${{ github.sha }}"
          echo "   triggered by: ${{ github.event_name}}"
          echo "     Pushing to: $DOCKER_TAG"
          docker build . --tag $DOCKER_TAG --file Dockerfile.nginx
          docker push $DOCKER_TAG

      - name: Cleanup GIT credentials
        if: ${{ always() }}
        run: |
          rm ~/.config/git/credentials


  # build-and-deploy-github:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Configure GIT credential helper
  #       env:
  #         TUG_GITLAB_ACCESSTOKEN: ${{ secrets.TUG_GITLAB_ACCESSTOKEN }}
  #       run: |
  #         mkdir -p ~/.config/git/
  #         touch ~/.config/git/credentials
  #         chmod 600 ~/.config/git/credentials
  #         echo "$TUG_GITLAB_ACCESSTOKEN" >> ~/.config/git/credentials
  #         git config --global credential.helper 'store --file ~/.config/git/credentials'
      
  #     - name: Checkout 🛎️
  #       uses: actions/checkout@v2.3.4
  #       with:
  #         persist-credentials: false

  #     - name: Checkout submodules 🌐
  #       run: git submodule update --init

  #     - name: Fix app-shell URLs 👷
  #       run: |
  #         APPSHELL="./vendor/toolkit/packages/app-shell/src/app-shell.js"
  #         sed -i -e 's:www.tugraz.at/en/about-this-page/legal-notice/:krakenh2020.eu/legal-notice:g' $APPSHELL
  #         sed -i -e 's:www.tugraz.at/ueber-diese-seite/impressum/:krakenh2020.eu/legal-notice:g' $APPSHELL
  #         sed -i -e 's:it-support@tugraz.at:smore@tugraz.at:g' $APPSHELL

  #     - name: Fix git config 👷
  #       run: |
  #         echo "https://github.com/$GITHUB_REPOSITORY.git"
  #         git remote rm origin
  #         git remote add origin https://github.com/$GITHUB_REPOSITORY.git

  #     - name: Install and Build 🔧
  #       run: |
  #         yarn install
  #         yarn rollup -c --environment BUILD:kraken

  #     - name: Deploy FallbackResource 🔀
  #       run: |
  #         REDIR='<html><head><meta http-equiv="refresh" content="0; url=https://krakenh2020.github.io/EduPilotFrontend/vc4sm-frontend.html"></head><body></body></html>'
  #         echo $REDIR > dist/index.html
  #         echo $REDIR > dist/404.html

  #     - name: Deploy 🚀
  #       uses: JamesIves/github-pages-deploy-action@3.7.1
  #       with:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         BRANCH: gh-pages # The branch the action should deploy to.
  #         FOLDER: dist # The folder the action should deploy.
  #         CLEAN: true # Automatically remove deleted files from the deploy branch
  #         CLEAN-EXCLUDE: |
  #           .nojekyll

  #     - name: Cleanup GIT credentials
  #       if: ${{ always() }}
  #       run: |
  #         rm ~/.config/git/credentials
